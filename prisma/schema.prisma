// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserType {
  NORMAL
  ADMIN
}
model User {
  id                      Int                   @id @default(autoincrement())
  email                   String                @unique
  passwordHash            String
  fullName                String?   
  type                    UserType
  consentGivenAt          DateTime?
  isEmailVerified         Boolean               @default(false)
  verificationToken       String?
  verificationTokenExpiry DateTime?
  otpHash                 String?
  otpExpiry               DateTime?
  RefreshToken            RefreshToken[]
  passwordResetTokens     PasswordResetToken[]  
  assistantIds            AssistantID[]         
}

model AssistantID {
  id        Int      @id @default(autoincrement())
  value     String   
  userId    Int
  createdAt DateTime @default(now())
  assistantName String  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])  
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
